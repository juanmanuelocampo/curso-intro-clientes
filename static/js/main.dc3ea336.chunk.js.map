{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","oldTodoValue","setOldTodoValue","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","updateTodo","oldText","newText","objIndex","findIndex","obj","alert","completeTodo","todoIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","prevState","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","CreateTodoButton","Modal","ReactDOM","createPortal","document","getElementById","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.dc3ea336.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage('TODOS_V1', []);\n\n  const [oldTodoValue, setOldTodoValue] = React.useState('');\n  const [searchValue, setSearchValue] = React.useState('');\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n    });\n    saveTodos(newTodos);\n  };\n\n  const updateTodo = (oldText, newText) => {\n    const newTodos = [...todos];\n\n    const objIndex = newTodos.findIndex((obj => obj.text === oldText));\n    if(objIndex < 0){\n      alert('Atención: Se produjo un inconveniente al intentar actualizar el registro. Por o tanto, no podrá realizarse la actualización.')\n      return;\n    }\n    newTodos[objIndex].text = newText;\n    saveTodos(newTodos);\n  };\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return (\n    <TodoContext.Provider value={{\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      oldTodoValue,\n      setOldTodoValue,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      addTodo,\n      updateTodo,\n      completeTodo,\n      deleteTodo,\n      openModal,\n      setOpenModal,\n    }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };\n","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch(error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n}\n\nexport { useLocalStorage };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\n\n  return (\n    <h2 className=\"TodoCounter\">La cantidad de clientes activos son {completedTodos} del {totalTodos} total de registrados.</h2>\n  );\n}\n\nexport { TodoCounter };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <>\n    <label>Búsqueda</label>\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Nombre\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n    </>\n  );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n  const onClickButton = () => {\n    props.setOldTodoValue(props.text);\n    props.setOpenModal(prevState => !prevState);\n  };\n\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        √\n      </span>\n      <span\n        className={`Icon Icon-edit ${props.completed && 'Icon-check--active'}`}\n        onClick={onClickButton}\n      >\n        Edit\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span\n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React, { useEffect } from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoForm.css';\n\nfunction TodoForm(props) {\n  const [newTodoValue, setNewTodoValue] = React.useState('');\n\n  const {\n    addTodo,\n    oldTodoValue,\n    setOldTodoValue,\n    updateTodo,\n    setOpenModal,\n  } = React.useContext(TodoContext);\n\n  const onChange = (event) => {\n    setNewTodoValue(event.target.value);\n  };\n\n  const onCancel = () => {\n    setOpenModal(false);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if(newTodoValue){\n      if(oldTodoValue.length > 0){\n        updateTodo(oldTodoValue, newTodoValue);\n      }else{\n        addTodo(newTodoValue);\n      }\n      setOpenModal(false);\n      setOldTodoValue('');\n      return true;\n    }else{\n      alert(\"Atención: Debes completar el nombre!\");\n    }\n  };\n\n  useEffect(() => {\n    //Si es modificación, asigno al campo el valor a editar\n    oldTodoValue.length > 0 && setNewTodoValue(oldTodoValue);\n  }, []);\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>Escribe el nombre del nuevo cliente</label>\n      <textarea\n        value={newTodoValue}\n        onChange={onChange}\n        placeholder=\"Nombre\"\n      />\n      <div className=\"TodoForm-buttonContainer\">\n        <button\n          type=\"button\"\n          className=\"TodoForm-button TodoForm-button--cancel\"\n          onClick={onCancel}\n          >\n          Cancelar\n        </button>\n        <button\n          type=\"submit\"\n          className=\"TodoForm-button TodoForm-button--add\"\n        >\n          Añadir\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n  const onClickButton = () => {\n    props.setOpenModal(prevState => !prevState);\n  };\n\n  return (\n    <button\n      className=\"CreateTodoButton\"\n      onClick={onClickButton}\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">\n      {children}\n    </div>,\n    document.getElementById('modal')\n  );\n}\n\nexport { Modal };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { TodoForm } from '../TodoForm';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { Modal } from '../Modal';\n\nfunction AppUI() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n    setOldTodoValue,\n  } = React.useContext(TodoContext);\n\n  return (\n    <React.Fragment>\n      <TodoCounter />\n      <TodoSearch />\n\n      <TodoList>\n        {error && <p>Desespérate, hubo un error...</p>}\n        {loading && <p>Estamos cargando, no desesperes...</p>}\n        {(!loading && !searchedTodos.length) && <p>¡Crea tu primer TODO!</p>}\n\n        {searchedTodos.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n            setOpenModal={setOpenModal}\n            setOldTodoValue={setOldTodoValue}\n          />\n        ))}\n      </TodoList>\n\n      {!!openModal && (\n        <Modal>\n          <TodoForm\n          />\n        </Modal>\n      )}\n\n      <CreateTodoButton\n        setOpenModal={setOpenModal}\n      />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };\n","import React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport { AppUI } from './AppUI';\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index.js';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}